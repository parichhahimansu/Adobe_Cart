{"version":3,"sources":["components/Home.js","components/Navbar.js","components/HomeSummary.js","components/actions/cartAction.js","components/actions/action-types/cart-actions.js","components/Summary.js","components/Cart.js","App.js","components/reducers/cartReducer.js","index.js"],"names":["that","useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","connect","state","addedItems","props","classes","notify_cart","length","className","AppBar","Toolbar","IconButton","edge","to","Typography","variant","noWrap","InputBase","placeholder","root","input","inputProps","Badge","badgeContent","aria-label","aria-haspopup","HomeSummary","this","total","Component","axios","require","Home","handleClick","id","addToCart","handleSort","type","items","sort","a","b","price","discount","sortItems","handleChange","event","newValue","setState","value","bind","get","then","response","data","min","getItems","catch","error","console","log","itemList","max","reduce","Math","filter","item","map","quantity","addedItem","key","src","img_url","alt","name","onClick","CircularProgress","gutterBottom","Slider","onChange","valueLabelDisplay","aria-labelledby","Link","underline","sortType","dispatch","payload","filteredItems","Summary","Cart","handleRemove","removeItem","handleAddQuantity","addQuantity","handleSubtractQuantity","subtractQuantity","App","exact","path","component","initState","cartReducer","action","find","existed_item","newTotal","itemToRemove","new_items","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2922fb4d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { addToCart, getItems, sortItems, filteredItems } from './actions/cartAction'\r\nimport HomeSummary from './HomeSummary';\r\nimport { Link , CircularProgress, Slider, Typography } from '@material-ui/core';\r\n\r\nconst axios = require('axios');\r\n\r\nvar that;\r\n\r\n class Home extends Component{\r\n\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            value: [150, 700]\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        \r\n    }\r\n\r\n    //Add item to Cart\r\n    handleClick = (id)=>{\r\n        this.props.addToCart(id); \r\n    }\r\n\r\n    componentDidMount () {\r\n        that = this;\r\n \r\n        // Make a request for a user with a given ID\r\n        axios.get('https://api.myjson.com/bins/qzuzi')\r\n        .then(function (response) {\r\n            // handle success\r\n            response.data.min = \r\n            that.props.getItems(response.data);\r\n        })\r\n        .catch(function (error) {\r\n            // handle error\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    handleSort = (type) => {\r\n        if(type === \"asc\") {\r\n            this.props.items.sort((a, b) => (a.price < b.price) ? 1 : -1)\r\n        } else if(type === \"dsc\") {\r\n            this.props.items.sort((a, b) => (a.price > b.price) ? 1 : -1)\r\n        } else {\r\n            this.props.items.sort((a, b) => (a.discount < b.discount) ? 1 : -1)\r\n        }\r\n        this.props.sortItems(type, this.props.items);\r\n    }\r\n\r\n    handleChange = (event, newValue) => {\r\n        this.setState({value: newValue});\r\n    };\r\n\r\n    render(){\r\n        let itemList, min, max ;\r\n\r\n        if(this.props.items.length) {\r\n            const { items } = this.props;\r\n            let newValue = this.state.value;\r\n\r\n            min = this.props.items.reduce((min, b) => Math.min(min, b.price), this.props.items[0].price);\r\n            max = this.props.items.reduce((max, b) => Math.max(max, b.price), this.props.items[0].price);\r\n\r\n            let filteredItems = items.filter((item) => {\r\n                if(item.price < newValue[1] && item.price > newValue[0] ) {\r\n                    return item;\r\n                }\r\n            });\r\n            \r\n            itemList = filteredItems.map(item=>{\r\n\r\n                let quantity = \"0\";\r\n                this.props.addedItems.map(addedItem => {\r\n                    if(item.id === addedItem.id) {\r\n                        quantity = addedItem.quantity;\r\n                    }\r\n                });\r\n                return(\r\n                    <div className=\"card\" key={item.id}>\r\n                        <div className=\"card-image\">\r\n                            <img src={item.img_url} alt={item.name}/>\r\n                            <span className=\"card-title\">{item.name}</span>\r\n                        </div>\r\n\r\n                        <div className=\"card-content\">\r\n                            <p><b>{item.discount} % Off</b></p>\r\n                            <p><b>Price: {item.price}$</b></p>\r\n                        </div>\r\n\r\n                        <div className=\"card-action\">\r\n                            <div className=\"price-det\">\r\n                                <b>Quantity: {quantity}</b>\r\n                            </div>\r\n                            <div className=\"add-btn\">\r\n                                <button className=\"waves-effect waves-light btn red\" \r\n                                    onClick={()=>{this.handleClick(item.id)}}>\r\n                                    Add\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })\r\n        } else {\r\n            itemList = <div className=\"loader-class\"><CircularProgress /></div>\r\n        }\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <div>\r\n                    <h4 className=\"header-title\">Adobe Products</h4>\r\n                    <HomeSummary/>\r\n                </div>\r\n                <div className=\"slider-box\">\r\n                    <Typography id=\"non-linear-slider\" gutterBottom>\r\n                        Price Range\r\n                    </Typography>\r\n                    <Slider\r\n                        min = {min}\r\n                        max = {max}\r\n                        value={this.state.value}\r\n                        onChange={this.handleChange}\r\n                        valueLabelDisplay=\"auto\"\r\n                        aria-labelledby=\"range-slider\"\r\n                    />\r\n                </div>\r\n                <div className=\"sort-box\">\r\n                    <Typography id=\"sort-by\" gutterBottom>\r\n                        Sort By\r\n                    </Typography>\r\n                    <Link color=\"primary\" underline=\"hover\" onClick={() => this.handleSort(\"asc\")}>\r\n                        Price -- High To Low\r\n                    </Link>\r\n                    <Link color=\"primary\" underline=\"hover\" onClick={() => this.handleSort(\"dsc\")}>\r\n                        Price -- Low To High\r\n                    </Link>\r\n                    <Link color=\"primary\" underline=\"hover\" onClick={() => this.handleSort(\"dcn\")}>\r\n                        Discount\r\n                    </Link>\r\n                </div>\r\n                <div className=\"box\">\r\n                    {/* Render item in a box */}\r\n                    {itemList}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//Get the items from redux store\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n      items: state.items,\r\n      addedItems: state.addedItems,\r\n      total: state.total,\r\n      sortType: state.sortType,\r\n      newValue: state.newValue\r\n    }\r\n  }\r\n\r\n//Add the dispatchers to events which will connect to redux later  \r\nconst mapDispatchToProps= (dispatch)=>{\r\n    \r\n    return{\r\n        addToCart: (id)=>{dispatch(addToCart(id))},\r\n        getItems: (payload) => {dispatch(getItems(payload))},\r\n        sortItems: (type, payload) => {dispatch(sortItems(type, payload))},\r\n        filteredItems: (newValue, payload) => {dispatch(filteredItems(newValue, payload))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Home)","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport ShoppingCart from '@material-ui/icons/ShoppingCart';\r\nimport Star from '@material-ui/icons/Star';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      display: 'none',\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'block',\r\n      },\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)` ,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: '20ch',\r\n      },\r\n    },\r\n    sectionDesktop: {\r\n      display: 'none',\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'flex',\r\n      },\r\n    },\r\n    sectionMobile: {\r\n      display: 'flex',\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n  }));\r\n\r\n// Its a pure function no react component needed\r\n const Navbar = (props)=>{\r\n    const classes = useStyles();\r\n     let notify_cart = props.addedItems.length ? props.addedItems.length : \"0\";\r\n    return(\r\n        <div className={classes.grow}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar className=\"toolbar\">\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                    >\r\n                        <Link to=\"/Adobe_Cart\" ><Star /></Link>\r\n                    </IconButton>\r\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                        <Link to=\"/Adobe_Cart\" >Adobe Cart</Link>\r\n                    </Typography>\r\n                    <div className={classes.search}>\r\n                        <div className={classes.searchIcon}>\r\n                        <SearchIcon />\r\n                        </div>\r\n                        <InputBase\r\n                        placeholder=\"Search…\"\r\n                        classes={{\r\n                            root: classes.inputRoot,\r\n                            input: classes.inputInput,\r\n                        }}\r\n                        inputProps={{ 'aria-label': 'search' }}\r\n                        />\r\n                    </div>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton>\r\n              <Badge badgeContent={notify_cart} color=\"secondary\">\r\n              <Link to=\"/cart\" ><ShoppingCart /></Link>\r\n              </Badge>\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-haspopup=\"true\"\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        addedItems: state.addedItems,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass HomeSummary extends Component{\r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"summary-box\">\r\n            {this.props.total ? \r\n                <div className=\"collection\">\r\n                    <li className=\"collection-item\">\r\n                        <div className=\"cart_det\">\r\n                            <b>Items: {this.props.addedItems.length}&nbsp;&nbsp;&nbsp; </b>\r\n                            <b>Total: {this.props.total}$</b>\r\n                        </div>\r\n                        <div className=\"cart_btn\">\r\n                            <button className=\"waves-effect waves-light btn\"><Link to=\"/cart\">Go to Cart</Link></button>\r\n                        </div>\r\n                    </li>\r\n                </div>\r\n            : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        addedItems: state.addedItems,\r\n        total: state.total\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(HomeSummary)","import { ADD_TO_CART,REMOVE_ITEM,SUB_QUANTITY,ADD_QUANTITY, GET_ITEMS, SORT_ITEMS, FILTERED_ITEMS } from './action-types/cart-actions'\r\n\r\n// Load intial items\r\nexport const getItems = (payload) => {\r\n    return {\r\n        type: GET_ITEMS,\r\n        payload\r\n    }\r\n}\r\n\r\n//add cart action\r\nexport const addToCart= (id)=>{\r\n    return{\r\n        type: ADD_TO_CART,\r\n        id\r\n    }\r\n}\r\n//remove item action\r\nexport const removeItem=(id)=>{\r\n    return{\r\n        type: REMOVE_ITEM,\r\n        id\r\n    }\r\n}\r\n//subtract qt action\r\nexport const subtractQuantity=(id)=>{\r\n    return{\r\n        type: SUB_QUANTITY,\r\n        id\r\n    }\r\n}\r\n//add qt action\r\nexport const addQuantity=(id)=>{\r\n    return{\r\n        type: ADD_QUANTITY,\r\n        id\r\n    }\r\n}\r\n// Sort items\r\nexport const sortItems = (sortType, payload) => {\r\n    return {\r\n        type: SORT_ITEMS,\r\n        sortType,\r\n        payload\r\n    }\r\n}\r\n// Filter items\r\nexport const filteredItems = (newValue, payload) => {\r\n    return {\r\n        type: FILTERED_ITEMS,\r\n        newValue,\r\n        payload\r\n    }\r\n}\r\n","//Types should be in const to avoid typos and duplication since it's a string and could be easily miss spelled\r\nexport const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const REMOVE_ITEM = 'REMOVE_ITEM';\r\nexport const SUB_QUANTITY = 'SUB_QUANTITY';\r\nexport const ADD_QUANTITY = 'ADD_QUANTITY';\r\nexport const GET_ITEMS = 'GET_ITEMS';\r\nexport const SORT_ITEMS = 'SORT_ITEMS';\r\nexport const FILTERED_ITEMS = 'FILTERED_ITEMS';","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Summary extends Component{\r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"collection\">\r\n                    <li className=\"collection-item\"><b>Total: {this.props.total}$</b></li>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        addedItems: state.addedItems,\r\n        total: state.total\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Summary)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { removeItem,addQuantity,subtractQuantity} from './actions/cartAction'\r\nimport Summary from './Summary'\r\n\r\n// A cart component will show the items added to cart\r\nclass Cart extends Component{\r\n\r\n    //to remove the item completely\r\n    handleRemove = (id)=>{\r\n        this.props.removeItem(id);\r\n    }\r\n    //to add the quantity\r\n    handleAddQuantity = (id)=>{\r\n        this.props.addQuantity(id);\r\n    }\r\n    //to substruct from the quantity\r\n    handleSubtractQuantity = (id)=>{\r\n        this.props.subtractQuantity(id);\r\n    }\r\n    render(){\r\n              \r\n        let addedItems = this.props.items.length ?\r\n            (  \r\n                this.props.items.map(item=>{\r\n                    return(\r\n                       \r\n                        <li className=\"collection-item avatar\" key={item.id}>\r\n                                    <div className=\"item-img\"> \r\n                                        <img src={item.img_url} alt={item.name} className=\"\"/>\r\n                                    </div>\r\n                                \r\n                                    <div className=\"item-desc\">\r\n                                        <span className=\"title\">{item.name}</span>\r\n                                        <p><b>Price: {item.price}$</b></p> \r\n                                        <p>\r\n                                            <b>Quantity: {item.quantity}</b> \r\n                                        </p>\r\n                                        <div className=\"add-remove\">\r\n                                            <Link to=\"/cart\"><i className=\"material-icons\" onClick={()=>{this.handleAddQuantity(item.id)}}>arrow_drop_up</i></Link>\r\n                                            <Link to=\"/cart\"><i className=\"material-icons\" onClick={()=>{this.handleSubtractQuantity(item.id)}}>arrow_drop_down</i></Link>\r\n                                        </div>\r\n                                        <button className=\"waves-effect waves-light btn pink remove\" onClick={()=>{this.handleRemove(item.id)}}>Remove</button>\r\n                                    </div>\r\n                                    \r\n                                </li>\r\n                         \r\n                    )\r\n                })\r\n            ):\r\n\r\n             (\r\n                <p> Nothing. </p>\r\n             )\r\n       return(\r\n            <div className=\"container\">\r\n                {this.props.items.length ?\r\n                <div className=\"cart\">\r\n                    <h5>You have ordered:</h5>\r\n                    <ul className=\"collection\">\r\n                        {addedItems}\r\n                    </ul>\r\n                </div>  : <h5>No items added to Cart</h5>\r\n                }\r\n                <Summary />          \r\n            </div>\r\n       )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        items: state.addedItems\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return{\r\n        removeItem: (id)=>{dispatch(removeItem(id))},\r\n        addQuantity: (id)=>{dispatch(addQuantity(id))},\r\n        subtractQuantity: (id)=>{dispatch(subtractQuantity(id))}\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Cart)","import React, { Component } from 'react';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\r\nimport Navbar from './components/Navbar'\r\nimport Home from './components/Home'\r\nimport Cart from './components/Cart'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n       <BrowserRouter>\r\n            <div className=\"App\">\r\n            \r\n              <Navbar/>\r\n                <Switch>\r\n                    <Route exact path=\"/Adobe_Cart\" component={Home}/>\r\n                    <Route path=\"/cart\" component={Cart}/>\r\n                  </Switch>\r\n             </div>\r\n       </BrowserRouter>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { ADD_TO_CART,REMOVE_ITEM,SUB_QUANTITY,ADD_QUANTITY, GET_ITEMS, SORT_ITEMS, FILTERED_ITEMS } from '../actions/action-types/cart-actions'\r\n\r\n\r\nconst initState = {\r\n    items: [],\r\n    addedItems:[],\r\n    total: 0,\r\n    sortType: \"\"\r\n\r\n}\r\nconst cartReducer= (state = initState,action)=>{\r\n\r\n    if(action.type === GET_ITEMS) {\r\n        return {\r\n            ...state,\r\n            items: action.payload\r\n        }\r\n    }\r\n\r\n    if(action.type === SORT_ITEMS) {\r\n        return {\r\n            ...state,\r\n            items: action.payload,\r\n            sortType: action.sortType\r\n        }\r\n    }\r\n\r\n    if(action.type === FILTERED_ITEMS) {\r\n        return {\r\n            ...state,\r\n            items: action.payload,\r\n            newValue: action.newValue\r\n        }\r\n    }\r\n   \r\n    //INSIDE HOME COMPONENT\r\n    if(action.type === ADD_TO_CART){\r\n          let addedItem = state.items.find(item=> item.id === action.id)\r\n          //check if the action id exists in the addedItems\r\n         let existed_item= state.addedItems.find(item=> action.id === item.id)\r\n         if(existed_item)\r\n         {\r\n            addedItem.quantity += 1 \r\n             return{\r\n                ...state,\r\n                 total: state.total + addedItem.price \r\n                  }\r\n        }\r\n         else{\r\n            addedItem.quantity = 1;\r\n            //calculating the total\r\n            let newTotal = state.total + addedItem.price \r\n            \r\n            return{\r\n                ...state,\r\n                addedItems: [...state.addedItems, addedItem],\r\n                total : newTotal\r\n            }\r\n            \r\n        }\r\n    }\r\n    if(action.type === REMOVE_ITEM){\r\n        let itemToRemove= state.addedItems.find(item=> action.id === item.id)\r\n        let new_items = state.addedItems.filter(item=> action.id !== item.id)\r\n        \r\n        //calculating the total\r\n        let newTotal = state.total - (itemToRemove.price * itemToRemove.quantity )\r\n        return{\r\n            ...state,\r\n            addedItems: new_items,\r\n            total: newTotal\r\n        }\r\n    }\r\n    //INSIDE CART COMPONENT\r\n    if(action.type=== ADD_QUANTITY){\r\n        let addedItem = state.items.find(item=> item.id === action.id)\r\n          addedItem.quantity += 1 \r\n          let newTotal = state.total + addedItem.price\r\n          return{\r\n              ...state,\r\n              total: newTotal\r\n          }\r\n    }\r\n    if(action.type=== SUB_QUANTITY){  \r\n        let addedItem = state.items.find(item=> item.id === action.id) \r\n        //if the qt == 0 then it should be removed\r\n        if(addedItem.quantity === 1){\r\n            let new_items = state.addedItems.filter(item=>item.id !== action.id)\r\n            let newTotal = state.total - addedItem.price\r\n            return{\r\n                ...state,\r\n                addedItems: new_items,\r\n                total: newTotal\r\n            }\r\n        }\r\n        else {\r\n            addedItem.quantity -= 1\r\n            let newTotal = state.total - addedItem.price\r\n            return{\r\n                ...state,\r\n                total: newTotal\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n  else{\r\n    return state\r\n    }\r\n    \r\n}\r\n\r\n  export default cartReducer\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css'\r\nimport cartReducer from './components/reducers/cartReducer';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\n\r\n//Crated a store to hold redux values\r\nconst store = createStore(cartReducer);\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));"],"sourceRoot":""}