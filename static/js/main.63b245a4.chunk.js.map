{"version":3,"sources":["components/Home.js","components/actions/cartAction.js","components/actions/action-types/cart-actions.js","components/Sidebar.js","components/Search.js","components/Navbar.js","components/HomeSummary.js","components/Image.js","components/Summary.js","components/Cart.js","App.js","components/reducers/cartReducer.js","index.js"],"names":["that","filteredItems","newValue","payload","originalItems","type","Sidebar","props","handleChange","event","setState","value","handleApply","state","toBeFilterd","items","length","filter","item","price","min","max","marks","this","Slider","onChange","valueLabelDisplay","aria-labelledby","className","onClick","Component","connect","dispatch","useStyles","makeStyles","theme","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginRight","spacing","marginLeft","width","breakpoints","up","searchIcon","padding","height","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","searchItems","searchString","filtered","classes","InputBase","placeholder","root","input","inputProps","e","target","itemToFilter","regexp","RegExp","x","test","name","onKeyPress","ev","key","preventDefault","populateItems","grow","flexGrow","appBar","zIndex","drawer","menuButton","title","flexShrink","drawerPaper","content","toolbar","mixins","addedItems","clearCart","id","location","useLocation","notify_cart","btnShow","AppBar","Toolbar","IconButton","edge","to","Typography","variant","noWrap","Badge","badgeContent","Drawer","paper","anchor","Divider","pathname","gutterBottom","Button","HomeSummary","total","Image","useState","React","useRef","loading","setLoading","Fragment","style","LinearProgress","src","img_url","alt","onLoad","axios","require","Home","handleClick","addToCart","manipulateItems","data","map","discountPrice","discount","newPrice","getItems","handleSort","sort","a","b","sortItems","get","then","response","catch","error","console","log","itemList","quantity","addedItem","CircularProgress","Link","underline","sortType","Summary","discountTotal","reduce","prev","next","netAmount","totalItems","totalString","Cart","handleRemove","removeItem","handleAddQuantity","addQuantity","handleSubtractQuantity","subtractQuantity","App","exact","path","component","initState","cartReducer","action","find","existed_item","newTotal","itemToRemove","new_items","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.63b245a4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { addToCart, getItems, sortItems, filteredItems } from './actions/cartAction'\r\nimport HomeSummary from './HomeSummary';\r\nimport { Link , CircularProgress, Typography } from '@material-ui/core';\r\nimport Image from './Image'\r\n\r\nconst axios = require('axios');\r\n\r\nvar that;\r\n\r\nclass Home extends Component{\r\n    \r\n    //Add item to Cart\r\n    handleClick = (id)=>{\r\n        this.props.addToCart(id); \r\n    }\r\n\r\n    componentDidMount () {\r\n        that = this;\r\n \r\n        // Make a request for a user with a given ID\r\n        axios.get('https://api.myjson.com/bins/qzuzi')\r\n        .then(function (response) {\r\n            // handle success\r\n            that.manipulateItems(response.data);\r\n            // that.props.getItems(response.data);\r\n        })\r\n        .catch(function (error) {\r\n            // handle error\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    manipulateItems = (data) => {\r\n        data.map((item) => {\r\n            item.discountPrice = (item.price/100)*item.discount;\r\n            item.newPrice = item.price - item.discountPrice;\r\n        })\r\n\r\n        this.props.getItems(data);\r\n    }\r\n\r\n    handleSort = (type) => {\r\n        if(type === \"asc\") {\r\n            this.props.items.sort((a, b) => (a.price < b.price) ? 1 : -1)\r\n        } else if(type === \"dsc\") {\r\n            this.props.items.sort((a, b) => (a.price > b.price) ? 1 : -1)\r\n        } else {\r\n            this.props.items.sort((a, b) => (a.discount < b.discount) ? 1 : -1)\r\n        }\r\n        this.props.sortItems(type, this.props.items);\r\n    }\r\n\r\n    handleChange = (event, newValue) => {\r\n        this.setState({value: newValue});\r\n    };\r\n\r\n\r\n    render(){\r\n        let itemList;\r\n\r\n        if(this.props.items.length) {\r\n            const { items } = this.props;\r\n\r\n            itemList = items.map(item=>{\r\n\r\n                let quantity = \"0\";\r\n                this.props.addedItems.map(addedItem => {\r\n                    if(item.id === addedItem.id) {\r\n                        quantity = addedItem.quantity;\r\n                    }\r\n                });\r\n                return(\r\n                    <div className=\"card\" key={item.id}>\r\n                        <div className=\"card-image\">\r\n                            {/* <img src={item.img_url} alt={item.name}/> */}\r\n                            <Image item={item}/>\r\n                            <span className=\"card-title\">{item.name}</span>\r\n                        </div>\r\n\r\n                        <div className=\"card-content\">\r\n                            <p><b>Price: {item.newPrice}$</b></p>\r\n                            <p><b>{item.price} </b></p>\r\n                            <p><b>{item.discount} % Off </b></p>\r\n                        </div>\r\n\r\n                        <div className=\"card-action\">\r\n                            <div className=\"price-det\">\r\n                                <b>Quantity: {quantity}</b>\r\n                            </div>\r\n                            <div className=\"add-btn\">\r\n                                <button className=\"waves-effect waves-light btn red\" \r\n                                    onClick={()=>{this.handleClick(item.id)}}>\r\n                                    Add\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })\r\n        } else {\r\n            itemList = <div className=\"loader-class\"><CircularProgress /></div>\r\n        }\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <div>\r\n                    {/* <h4 className=\"header-title\">Adobe Products</h4> */}\r\n                    <HomeSummary/>\r\n                \r\n                    <div className=\"sort-box\">\r\n                        <Typography id=\"sort-by\" gutterBottom>\r\n                            Sort By\r\n                        </Typography>\r\n                        <Link color=\"primary\" underline=\"hover\" onClick={() => this.handleSort(\"asc\")}>\r\n                            Price -- High To Low\r\n                        </Link>\r\n                        <Link color=\"primary\" underline=\"hover\" onClick={() => this.handleSort(\"dsc\")}>\r\n                            Price -- Low To High\r\n                        </Link>\r\n                        <Link color=\"primary\" underline=\"hover\" onClick={() => this.handleSort(\"dcn\")}>\r\n                            Discount\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"box\">\r\n                    {/* Render item in a box */}\r\n                    {itemList}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//Get the items from redux store\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n      items: state.items,\r\n      addedItems: state.addedItems,\r\n      total: state.total,\r\n      sortType: state.sortType,\r\n      newValue: state.newValue\r\n    }\r\n  }\r\n\r\n//Add the dispatchers to events which will connect to redux later  \r\nconst mapDispatchToProps= (dispatch)=>{\r\n    \r\n    return{\r\n        addToCart: (id)=>{dispatch(addToCart(id))},\r\n        getItems: (payload) => {dispatch(getItems(payload))},\r\n        sortItems: (type, payload) => {dispatch(sortItems(type, payload))},\r\n        filteredItems: (newValue, payload) => {dispatch(filteredItems(newValue, payload))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Home)","import { ADD_TO_CART,REMOVE_ITEM,SUB_QUANTITY,ADD_QUANTITY, GET_ITEMS, SORT_ITEMS, FILTERED_ITEMS, SEARCH_STRING, CLEAR_ITEMS } from './action-types/cart-actions'\r\n\r\n// Load intial items\r\nexport const getItems = (payload) => {\r\n    return {\r\n        type: GET_ITEMS,\r\n        payload\r\n    }\r\n}\r\n\r\n//add cart action\r\nexport const addToCart= (id)=>{\r\n    return{\r\n        type: ADD_TO_CART,\r\n        id\r\n    }\r\n}\r\n//remove item action\r\nexport const removeItem=(id)=>{\r\n    return{\r\n        type: REMOVE_ITEM,\r\n        id\r\n    }\r\n}\r\n//subtract qt action\r\nexport const subtractQuantity=(id)=>{\r\n    return{\r\n        type: SUB_QUANTITY,\r\n        id\r\n    }\r\n}\r\n//add qt action\r\nexport const addQuantity=(id)=>{\r\n    return{\r\n        type: ADD_QUANTITY,\r\n        id\r\n    }\r\n}\r\n// Sort items\r\nexport const sortItems = (sortType, payload) => {\r\n    return {\r\n        type: SORT_ITEMS,\r\n        sortType,\r\n        payload\r\n        \r\n    }\r\n}\r\n// Filter items\r\nexport const filteredItems = (newValue, payload, originalItems) => {\r\n    return {\r\n        type: FILTERED_ITEMS,\r\n        newValue,\r\n        payload,\r\n        originalItems\r\n    }\r\n}\r\n\r\n// Search items\r\nexport const searchItems = (searchString, payload, originalItems) => {\r\n    return {\r\n        type: SEARCH_STRING,\r\n        searchString,\r\n        payload,\r\n        originalItems\r\n    }\r\n}\r\n\r\n// Clear added items\r\nexport const clearCart = (id) => {\r\n    return {\r\n        type: CLEAR_ITEMS,\r\n        id\r\n    }\r\n}\r\n","//Types should be in const to avoid typos and duplication since it's a string and could be easily miss spelled\r\nexport const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const REMOVE_ITEM = 'REMOVE_ITEM';\r\nexport const SUB_QUANTITY = 'SUB_QUANTITY';\r\nexport const ADD_QUANTITY = 'ADD_QUANTITY';\r\nexport const GET_ITEMS = 'GET_ITEMS';\r\nexport const SORT_ITEMS = 'SORT_ITEMS';\r\nexport const FILTERED_ITEMS = 'FILTERED_ITEMS';\r\nexport const SEARCH_STRING = 'SEARCH_STRING';\r\nexport const CLEAR_ITEMS = 'CLEAR_ITEMS';","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Slider } from '@material-ui/core';\r\nimport { filteredItems } from './actions/cartAction'\r\n\r\n\r\nclass Sidebar extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            value: [150, 700]\r\n        }\r\n    }\r\n    \r\n    handleChange = (event, newValue) => {\r\n        this.setState({value: newValue});\r\n    };\r\n\r\n    handleApply = () => {\r\n        let newValue = this.state.value;\r\n\r\n        let {items} = this.props;\r\n        let toBeFilterd = (this.props.originalItems && this.props.originalItems.length > 0) ? this.props.originalItems : this.props.items;\r\n        let filteredItems = toBeFilterd.filter((item) => {\r\n            if(item.price < newValue[1] && item.price > newValue[0] ) {\r\n                return item;\r\n            }\r\n        });\r\n\r\n        this.props.filteredItems(newValue, filteredItems, toBeFilterd);\r\n    }\r\n\r\n    render(){\r\n\r\n        let min, max, marks;\r\n        if(this.props.items.length) {\r\n            // min = this.props.items.reduce((min, b) => Math.min(min, b.price), this.props.items[0].price);\r\n            // max = this.props.items.reduce((max, b) => Math.max(max, b.price), this.props.items[0].price);\r\n            min = this.state.value[0];\r\n            max = this.state.value[1];\r\n            marks = [{\"value\": min, \"label\": min }, {\"value\": max, \"label\": max } ]\r\n        }\r\n\r\n\r\n        return(\r\n            <div>\r\n                <Slider\r\n                    min = {150}\r\n                    max = {700}\r\n                    value={this.state.value}\r\n                    onChange={this.handleChange}\r\n                    valueLabelDisplay=\"auto\"\r\n                    aria-labelledby=\"range-slider\"\r\n                    marks={marks}\r\n                />\r\n\r\n                <div className=\"apply-btn\">\r\n                    <button className=\"waves-effect waves-light btn blue\" \r\n                        onClick={()=>{this.handleApply()}}>\r\n                        Apply\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        items: state.items,\r\n        originalItems: state.originalItems\r\n    }\r\n}\r\n\r\n//Add the dispatchers to events which will connect to redux later  \r\nconst mapDispatchToProps= (dispatch)=>{\r\n    return{\r\n        filteredItems: (newValue, payload, originalItems) => {dispatch(filteredItems(newValue, payload, originalItems))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport {searchItems} from './actions/cartAction';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)` ,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst Search = (props) => {\r\n    const classes = useStyles();\r\n    let filtered, searchString;\r\n\r\n    const handleSearch = (e) => {\r\n        if(e.target.value) {\r\n          filtered = []; let itemToFilter = [];\r\n          itemToFilter = (props.originalItems && props.originalItems.length > 0) ? props.originalItems : props.items;\r\n          searchString = e.target.value;\r\n          const regexp = new RegExp(searchString, 'i');\r\n          filtered = itemToFilter.filter(x => regexp.test(x.name));\r\n        }\r\n\r\n        // props.searchItems(searchString, filtered);\r\n    }\r\n\r\n    const populateItems = () => {\r\n      let itemToFilter = (props.originalItems && props.originalItems.length > 0) ? props.originalItems : props.items;\r\n      props.searchItems(searchString, filtered, itemToFilter);\r\n    }\r\n\r\n    return(\r\n        <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n            <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n            placeholder=\"Search…\"\r\n            classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n            }}\r\n            inputProps={{ 'aria-label': 'search' }}\r\n            onChange={handleSearch}\r\n            onKeyPress={(ev) => {\r\n              if (ev.key === 'Enter') {\r\n                // Do code here\r\n                ev.preventDefault();\r\n                populateItems()\r\n              }\r\n            }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        items: state.items,\r\n        originalItems: state.originalItems\r\n    }\r\n}\r\n\r\n//Add the dispatchers to events which will connect to redux later  \r\nconst mapDispatchToProps= (dispatch)=>{\r\n    return{\r\n        searchItems: (searchString, payload, originalItems) => {dispatch(searchItems(searchString, payload, originalItems))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search)","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport ShoppingCart from '@material-ui/icons/ShoppingCart';\r\nimport Star from '@material-ui/icons/Star';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Sidebar from './Sidebar';\r\nimport { useLocation } from 'react-router-dom'\r\nimport Search from './Search';\r\nimport Button from '@material-ui/core/Button';\r\nimport {clearCart} from './actions/cartAction'\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      display: 'none',\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'block',\r\n      },\r\n    },\r\n    \r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n    // necessary for content to be below app bar\r\n    toolbar: theme.mixins.toolbar,\r\n  }));\r\n\r\n// Its a pure function no react component needed\r\n const Navbar = (props)=>{\r\n    const classes = useStyles();\r\n    let location = useLocation();\r\n    let notify_cart = props.addedItems.length ? props.addedItems.length : \"0\";\r\n    let btnShow = props.addedItems.length ? true : false;\r\n\r\n    return(\r\n        <div className={classes.grow}>\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar className=\"toolbar\">\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                    >\r\n                        <Link to=\"/Adobe_Cart\" ><Star /></Link>\r\n                    </IconButton>\r\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                        <Link to=\"/Adobe_Cart\" >Adobe Cart</Link>\r\n                    </Typography>\r\n                    <Search/>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton>\r\n              <Badge badgeContent={notify_cart} color=\"secondary\">\r\n              <Link to=\"/cart\" ><ShoppingCart /></Link>\r\n              </Badge>\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n          className={classes.drawer}\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n          anchor=\"left\"\r\n        >\r\n          <div className={classes.toolbar} />\r\n          <Divider />\r\n          {location.pathname !== '/cart' ? \r\n          <div className=\"slider-box\">\r\n              <Typography id=\"non-linear-slider\" gutterBottom>\r\n                  Price Range\r\n              </Typography>\r\n              <Sidebar/> \r\n          </div>\r\n          : btnShow ? <Button className=\"drawer-btn\" variant=\"contained\" onClick={() => props.clearCart()}>Clear cart</Button> :\r\n            <Button className=\"drawer-btn\" variant=\"contained\" color=\"primary\">\r\n              <Link to=\"/Adobe_Cart\" >Go to shop</Link></Button>\r\n          }\r\n      </Drawer>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        addedItems: state.addedItems\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    clearCart: () => {dispatch(clearCart())}\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass HomeSummary extends Component{\r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"summary-box\">\r\n            {this.props.total ? \r\n                <div className=\"collection\">\r\n                    <li className=\"collection-item\">\r\n                        <div className=\"cart_det\">\r\n                            <b>Items: {this.props.addedItems.length}&nbsp;&nbsp;&nbsp; </b>\r\n                            <b>Total: {this.props.total}$</b>\r\n                        </div>\r\n                        <div className=\"cart_btn\">\r\n                            <button className=\"waves-effect waves-light btn\"><Link to=\"/cart\">Go to Cart</Link></button>\r\n                        </div>\r\n                    </li>\r\n                </div>\r\n            : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        addedItems: state.addedItems,\r\n        total: state.total\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(HomeSummary)","import React from 'react';\r\nimport { Typography, LinearProgress } from '@material-ui/core';\r\n\r\nconst Image = (props) => {\r\n\r\n    const {useState, useRef} = React;\r\n    const [loading, setLoading] = useState(true);\r\n    const imageLoaded = () => {\r\n      if (props.item.img_url.length) {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    return <React.Fragment>\r\n      <div style={{display: loading ? \"block\" : \"none\"}}>\r\n        <LinearProgress color=\"secondary\" />\r\n        <Typography id=\"sort-by\" gutterBottom>\r\n            Loading ...\r\n        </Typography>\r\n      </div>\r\n      <div style={{display: loading ? \"none\" : \"block\"}}>\r\n          <img \r\n            src={props.item.img_url}\r\n            alt={props.item.name}\r\n            onLoad={imageLoaded}/>\r\n      </div>\r\n    </React.Fragment>;\r\n  }\r\n\r\n  export default Image;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Summary extends Component{\r\n    \r\n    \r\n    render(){\r\n\r\n        function amount(item){\r\n            return item.discountPrice*(item.quantity ? item.quantity : 1);\r\n        }\r\n        \r\n        function sum(prev, next){\r\n            return prev + next;\r\n        }\r\n        \r\n        let discountTotal = this.props.addedItems.map(amount).reduce(sum);\r\n        let netAmount = this.props.total - discountTotal;\r\n        let totalItems = this.props.addedItems.length;\r\n        let totalString = totalItems > 1 ? `(${totalItems} Items)` : `(${totalItems} Item)`;\r\n        return(\r\n                <div className=\"collection\">\r\n                    <li className=\"collection-item\"><b>Price details</b></li>\r\n                    <li className=\"collection-item\">\r\n                        <b><span className=\"cart-det-item\">Price {totalString}</span>: <span className=\"cart-det-price\">{this.props.total}$</span></b></li>\r\n                    <li className=\"collection-item\">\r\n                        <b><span className=\"cart-det-item\">Discount</span>: <span className=\"cart-det-price\">{discountTotal}$</span></b></li>\r\n                    <li className=\"collection-item\">\r\n                        <b><span className=\"cart-det-item\">Total</span>: <span className=\"cart-det-price\">{netAmount}$</span></b>\r\n                    </li>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        addedItems: state.addedItems,\r\n        total: state.total\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Summary)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { removeItem,addQuantity,subtractQuantity} from './actions/cartAction'\r\nimport Summary from './Summary'\r\nimport Image from './Image'\r\n\r\n// A cart component will show the items added to cart\r\nclass Cart extends Component{\r\n\r\n    //to remove the item completely\r\n    handleRemove = (id)=>{\r\n        this.props.removeItem(id);\r\n    }\r\n    //to add the quantity\r\n    handleAddQuantity = (id)=>{\r\n        this.props.addQuantity(id);\r\n    }\r\n    //to substruct from the quantity\r\n    handleSubtractQuantity = (id)=>{\r\n        this.props.subtractQuantity(id);\r\n    }\r\n    render(){\r\n              \r\n        let addedItems = this.props.items.length ?\r\n            (  \r\n                this.props.items.map(item=>{\r\n                    return(\r\n                       \r\n                        <li className=\"collection-item avatar\" key={item.id}>\r\n                                    <div className=\"item-img\"> \r\n                                    <Image item={item}/>\r\n                                    </div>\r\n                                \r\n                                    <div className=\"item-desc\">\r\n                                        <span className=\"title\">{item.name}</span>\r\n                                        <p><b>Price: {item.price}$</b></p> \r\n                                        <p>\r\n                                            <b>Quantity: {item.quantity}</b> \r\n                                        </p>\r\n                                        <div className=\"add-remove\">\r\n                                            <Link to=\"/cart\"><i className=\"material-icons\" onClick={()=>{this.handleAddQuantity(item.id)}}>arrow_drop_up</i></Link>\r\n                                            <Link to=\"/cart\"><i className=\"material-icons\" onClick={()=>{this.handleSubtractQuantity(item.id)}}>arrow_drop_down</i></Link>\r\n                                        </div>\r\n                                        <button className=\"waves-effect waves-light btn pink remove\" onClick={()=>{this.handleRemove(item.id)}}>Remove</button>\r\n                                    </div>\r\n                                    \r\n                                </li>\r\n                         \r\n                    )\r\n                })\r\n            ):\r\n\r\n             (\r\n                <p> Nothing. </p>\r\n             )\r\n       return(\r\n            <div className=\"container\">\r\n                {this.props.items.length ?\r\n                <div className=\"cart\">\r\n                    <h5>My Cart ({addedItems.length}) :</h5>\r\n                    <ul className=\"collection\">\r\n                        {addedItems}\r\n                    </ul>\r\n                    <Summary /> \r\n                </div>  : <h5>No items added to Cart</h5>\r\n                }\r\n                        \r\n            </div>\r\n       )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        items: state.addedItems\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return{\r\n        removeItem: (id)=>{dispatch(removeItem(id))},\r\n        addQuantity: (id)=>{dispatch(addQuantity(id))},\r\n        subtractQuantity: (id)=>{dispatch(subtractQuantity(id))}\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Cart)","import React from 'react';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\r\nimport Navbar from './components/Navbar'\r\nimport Home from './components/Home'\r\nimport Cart from './components/Cart'\r\n\r\nconst App = (props) => {\r\n    return (\r\n       <BrowserRouter>\r\n            <div className=\"App\">\r\n              <Navbar/>\r\n              <Switch>\r\n                  <Route exact path=\"/Adobe_Cart\" component={Home}/>\r\n                  <Route path=\"/cart\" component={Cart}/>\r\n              </Switch>\r\n             </div>\r\n       </BrowserRouter>\r\n      \r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ADD_TO_CART,REMOVE_ITEM,SUB_QUANTITY,ADD_QUANTITY, GET_ITEMS, SORT_ITEMS, FILTERED_ITEMS, SEARCH_STRING, CLEAR_ITEMS } from '../actions/action-types/cart-actions'\r\n\r\n\r\nconst initState = {\r\n    items: [],\r\n    addedItems:[],\r\n    originalItems: [],\r\n    total: 0,\r\n    sortType: \"\"\r\n\r\n}\r\nconst cartReducer= (state = initState,action)=>{\r\n\r\n    if(action.type === GET_ITEMS) {\r\n        return {\r\n            ...state,\r\n            items: action.payload\r\n        }\r\n    }\r\n\r\n    if(action.type === SORT_ITEMS) {\r\n        return {\r\n            ...state,\r\n            items: action.payload,\r\n            sortType: action.sortType\r\n        }\r\n    }\r\n\r\n    if(action.type === FILTERED_ITEMS) {\r\n        return {\r\n            ...state,\r\n            items: action.payload,\r\n            newValue: action.newValue,\r\n            originalItems: action.originalItems\r\n        }\r\n    }\r\n\r\n    if(action.type === SEARCH_STRING) {\r\n        return {\r\n            ...state,\r\n            items: action.payload,\r\n            newValue: action.searchString,\r\n            originalItems: action.originalItems\r\n        }\r\n    }\r\n\r\n    if(action.type === CLEAR_ITEMS) {\r\n        return {\r\n            ...state,\r\n            addedItems: [],\r\n            total: 0\r\n        }\r\n    }\r\n   \r\n    //INSIDE HOME COMPONENT\r\n    if(action.type === ADD_TO_CART){\r\n          let addedItem = state.items.find(item=> item.id === action.id)\r\n          //check if the action id exists in the addedItems\r\n         let existed_item= state.addedItems.find(item=> action.id === item.id)\r\n         if(existed_item)\r\n         {\r\n            addedItem.quantity += 1 \r\n             return{\r\n                ...state,\r\n                 total: state.total + addedItem.price \r\n                  }\r\n        }\r\n         else{\r\n            addedItem.quantity = 1;\r\n            //calculating the total\r\n            let newTotal = state.total + addedItem.price \r\n            \r\n            return{\r\n                ...state,\r\n                addedItems: [...state.addedItems, addedItem],\r\n                total : newTotal\r\n            }\r\n            \r\n        }\r\n    }\r\n    if(action.type === REMOVE_ITEM){\r\n        let itemToRemove= state.addedItems.find(item=> action.id === item.id)\r\n        let new_items = state.addedItems.filter(item=> action.id !== item.id)\r\n        \r\n        //calculating the total\r\n        let newTotal = state.total - (itemToRemove.price * itemToRemove.quantity )\r\n        return{\r\n            ...state,\r\n            addedItems: new_items,\r\n            total: newTotal\r\n        }\r\n    }\r\n    //INSIDE CART COMPONENT\r\n    if(action.type=== ADD_QUANTITY){\r\n        let addedItem = state.items.find(item=> item.id === action.id)\r\n          addedItem.quantity += 1 \r\n          let newTotal = state.total + addedItem.price\r\n          return{\r\n              ...state,\r\n              total: newTotal\r\n          }\r\n    }\r\n    if(action.type=== SUB_QUANTITY){  \r\n        let addedItem = state.items.find(item=> item.id === action.id) \r\n        //if the qt == 0 then it should be removed\r\n        if(addedItem.quantity === 1){\r\n            let new_items = state.addedItems.filter(item=>item.id !== action.id)\r\n            let newTotal = state.total - addedItem.price\r\n            return{\r\n                ...state,\r\n                addedItems: new_items,\r\n                total: newTotal\r\n            }\r\n        }\r\n        else {\r\n            addedItem.quantity -= 1\r\n            let newTotal = state.total - addedItem.price\r\n            return{\r\n                ...state,\r\n                total: newTotal\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n  else{\r\n    return state\r\n    }\r\n    \r\n}\r\n\r\n  export default cartReducer\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css'\r\nimport cartReducer from './components/reducers/cartReducer';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\n\r\n//Crated a store to hold redux values\r\nconst store = createStore(cartReducer);\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));"],"sourceRoot":""}